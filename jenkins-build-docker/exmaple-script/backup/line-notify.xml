<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.8.4"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.8.4">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.92">
    <script>def notifyLINE(status) {
    def token = &quot;oEry2E1ObqK6G5bpd1WC2I0666RIEVLrXhcOhPsdiPc&quot;
    def jobName = env.JOB_NAME +&apos; &apos;+env.BRANCH_NAME
    def buildNo = env.BUILD_NUMBER
      
    def url = &apos;https://notify-api.line.me/api/notify&apos;
    def message = &quot;${jobName} Build #${buildNo} ${status} \r\n&quot;
    sh &quot;curl ${url} -H &apos;Authorization: Bearer ${token}&apos; -F &apos;message=${message}&apos;&quot;
}

pipeline {
  agent any
  stages {
    stage(&apos;Build&apos;) {
      steps {
            sh &apos;echo &quot;hello&quot;&apos;     		
      }
    }
  }
  post{
    success{
        notifyLINE(&quot;succeed&quot;)
    }
    failure{
        notifyLINE(&quot;failed&quot;)
    }
  }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>